from memory.memory_manager import save_memory, suggest_tags
import datetime
import random
import time

# Lista de proyectos de prueba
sample_projects = [
    "Desarrollo de API REST para sistema de facturaci√≥n electr√≥nica.",
    "Automatizaci√≥n de reportes financieros usando Python y Pandas.",
    "Implementaci√≥n de plataforma de agentes IA para gesti√≥n de proyectos.",
    "Optimizaci√≥n de consultas en base de datos MySQL para plataforma web.",
    "Construcci√≥n de sistema de notificaciones push para aplicaciones m√≥viles.",
    "Despliegue de microservicios con Kubernetes y Docker.",
    "Integraci√≥n de chatbot inteligente en plataforma de soporte t√©cnico.",
    "Creaci√≥n de dashboards de anal√≠tica web con Power BI y Google Analytics.",
    "Sistema de detecci√≥n de anomal√≠as en redes de sensores IoT.",
    "Automatizaci√≥n de backups de servidores en la nube AWS."
]

def preload_projects():
    print("üöÄ Cargando proyectos de prueba en memoria...\n")

    for idx, description in enumerate(sample_projects):
        tags = suggest_tags(description)
        project_id = f"sample-project-{datetime.datetime.now().strftime('%Y%m%d%H%M%S')}-{random.randint(1000,9999)}"

        save_memory(
            project_id=project_id,
            description=description,
            tags=tags
        )

        print(f"‚úÖ Proyecto {idx+1}/10 guardado: {project_id}")
        time.sleep(1)  # Peque√±a pausa para asegurar IDs √∫nicos

    print("\nüéâ ¬°Carga de proyectos de prueba completada!")

if __name__ == "__main__":
    preload_projects()
